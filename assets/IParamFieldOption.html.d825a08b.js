import{_ as s,r as d,o as l,c as h,a as e,b as o,w as i,d as t,e as r}from"./app.264072a3.js";const c={},m=e("h1",{id:"interface-iparamfieldoption",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#interface-iparamfieldoption","aria-hidden":"true"},"#"),t(" Interface: IParamFieldOption")],-1),_=e("h2",{id:"hierarchy",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#hierarchy","aria-hidden":"true"},"#"),t(" Hierarchy")],-1),f=e("code",null,"ICommonFieldOption",-1),p=e("code",null,"IQueryParamCommonFieldOption",-1),u=e("p",null,[t("\u21B3 "),e("strong",null,[e("code",null,"IParamFieldOption")])],-1),b=e("h2",{id:"table-of-contents",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#table-of-contents","aria-hidden":"true"},"#"),t(" Table of contents")],-1),y=e("h3",{id:"properties",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#properties","aria-hidden":"true"},"#"),t(" Properties")],-1),I=t("bit"),x=t("comma"),O=t("encode"),F=t("formatter"),g=t("type"),P=r('<h2 id="properties-1" tabindex="-1"><a class="header-anchor" href="#properties-1" aria-hidden="true">#</a> Properties</h2><h3 id="bit" tabindex="-1"><a class="header-anchor" href="#bit" aria-hidden="true">#</a> bit</h3><p>\u2022 <strong>bit</strong>: <code>Object</code></p><h4 id="type-declaration" tabindex="-1"><a class="header-anchor" href="#type-declaration" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>enable</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">enable bitwised operator using by array</td></tr><tr><td style="text-align:left;"><code>withZero</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">If this configuration set enable, bitwised operation result are zero after submit zero value</td></tr></tbody></table><h4 id="inherited-from" tabindex="-1"><a class="header-anchor" href="#inherited-from" aria-hidden="true">#</a> Inherited from</h4>',6),C=t("IQueryParamCommonFieldOption"),Q=t("."),k=t("bit"),j=e("h4",{id:"defined-in",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in","aria-hidden":"true"},"#"),t(" Defined in")],-1),L={href:"https://github.com/imjuni/jin-frame/blob/b1283dd/src/interfaces/IQueryParamCommonFieldOption.ts#L15",target:"_blank",rel:"noopener noreferrer"},w=t("src/interfaces/IQueryParamCommonFieldOption.ts:15"),D=r('<hr><h3 id="comma" tabindex="-1"><a class="header-anchor" href="#comma" aria-hidden="true">#</a> comma</h3><p>\u2022 <strong>comma</strong>: <code>boolean</code></p><p>&quot;comma&quot; option only working querystring. If you want to process array parameter of querystring using by comma seperated string, set this option</p><p>Comma seperated array parameter on querystring</p><h4 id="inherited-from-1" tabindex="-1"><a class="header-anchor" href="#inherited-from-1" aria-hidden="true">#</a> Inherited from</h4>',6),q=t("IQueryParamCommonFieldOption"),N=t("."),v=t("comma"),T=e("h4",{id:"defined-in-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-1","aria-hidden":"true"},"#"),t(" Defined in")],-1),V={href:"https://github.com/imjuni/jin-frame/blob/b1283dd/src/interfaces/IQueryParamCommonFieldOption.ts#L13",target:"_blank",rel:"noopener noreferrer"},B=t("src/interfaces/IQueryParamCommonFieldOption.ts:13"),E=r('<hr><h3 id="encode" tabindex="-1"><a class="header-anchor" href="#encode" aria-hidden="true">#</a> encode</h3><p>\u2022 <code>Optional</code> <strong>encode</strong>: <code>boolean</code></p><p>Do encodeURIComponent execution, this option only executed in query parameter</p><h4 id="inherited-from-2" tabindex="-1"><a class="header-anchor" href="#inherited-from-2" aria-hidden="true">#</a> Inherited from</h4>',5),R=t("IQueryParamCommonFieldOption"),z=t("."),H=t("encode"),S=e("h4",{id:"defined-in-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-2","aria-hidden":"true"},"#"),t(" Defined in")],-1),U={href:"https://github.com/imjuni/jin-frame/blob/b1283dd/src/interfaces/ICommonFieldOption.ts#L3",target:"_blank",rel:"noopener noreferrer"},Z=t("src/interfaces/ICommonFieldOption.ts:3"),A=e("hr",null,null,-1),G=e("h3",{id:"formatter",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#formatter","aria-hidden":"true"},"#"),t(" formatter")],-1),J=t("\u2022 "),K=e("code",null,"Optional",-1),M=t(),W=e("strong",null,"formatter",-1),X=t(": "),Y=e("code",null,"IFormatter",-1),$=e("h4",{id:"inherited-from-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#inherited-from-3","aria-hidden":"true"},"#"),t(" Inherited from")],-1),ee=t("IQueryParamCommonFieldOption"),te=t("."),oe=t("formatter"),ne=e("h4",{id:"defined-in-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-3","aria-hidden":"true"},"#"),t(" Defined in")],-1),ie={href:"https://github.com/imjuni/jin-frame/blob/b1283dd/src/interfaces/IQueryParamCommonFieldOption.ts#L5",target:"_blank",rel:"noopener noreferrer"},ae=t("src/interfaces/IQueryParamCommonFieldOption.ts:5"),re=e("hr",null,null,-1),de=e("h3",{id:"type",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type","aria-hidden":"true"},"#"),t(" type")],-1),se=e("p",null,[t("\u2022 "),e("strong",null,"type"),t(": "),e("code",null,'"param"')],-1),le=e("h4",{id:"defined-in-4",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-4","aria-hidden":"true"},"#"),t(" Defined in")],-1),he={href:"https://github.com/imjuni/jin-frame/blob/b1283dd/src/interfaces/IParamFieldOption.ts#L5",target:"_blank",rel:"noopener noreferrer"},ce=t("src/interfaces/IParamFieldOption.ts:5");function me(_e,fe){const n=d("RouterLink"),a=d("ExternalLinkIcon");return l(),h("div",null,[m,_,e("ul",null,[e("li",null,[e("p",null,[o(n,{to:"/api/interfaces/ICommonFieldOption.html"},{default:i(()=>[f]),_:1})])]),e("li",null,[e("p",null,[o(n,{to:"/api/interfaces/IQueryParamCommonFieldOption.html"},{default:i(()=>[p]),_:1})]),u])]),b,y,e("ul",null,[e("li",null,[o(n,{to:"/api/interfaces/IParamFieldOption.html#bit"},{default:i(()=>[I]),_:1})]),e("li",null,[o(n,{to:"/api/interfaces/IParamFieldOption.html#comma"},{default:i(()=>[x]),_:1})]),e("li",null,[o(n,{to:"/api/interfaces/IParamFieldOption.html#encode"},{default:i(()=>[O]),_:1})]),e("li",null,[o(n,{to:"/api/interfaces/IParamFieldOption.html#formatter"},{default:i(()=>[F]),_:1})]),e("li",null,[o(n,{to:"/api/interfaces/IParamFieldOption.html#type"},{default:i(()=>[g]),_:1})])]),P,e("p",null,[o(n,{to:"/api/interfaces/IQueryParamCommonFieldOption.html"},{default:i(()=>[C]),_:1}),Q,o(n,{to:"/api/interfaces/IQueryParamCommonFieldOption.html#bit"},{default:i(()=>[k]),_:1})]),j,e("p",null,[e("a",L,[w,o(a)])]),D,e("p",null,[o(n,{to:"/api/interfaces/IQueryParamCommonFieldOption.html"},{default:i(()=>[q]),_:1}),N,o(n,{to:"/api/interfaces/IQueryParamCommonFieldOption.html#comma"},{default:i(()=>[v]),_:1})]),T,e("p",null,[e("a",V,[B,o(a)])]),E,e("p",null,[o(n,{to:"/api/interfaces/IQueryParamCommonFieldOption.html"},{default:i(()=>[R]),_:1}),z,o(n,{to:"/api/interfaces/IQueryParamCommonFieldOption.html#encode"},{default:i(()=>[H]),_:1})]),S,e("p",null,[e("a",U,[Z,o(a)])]),A,G,e("p",null,[J,K,M,W,X,o(n,{to:"/api/interfaces/IFormatter.html"},{default:i(()=>[Y]),_:1})]),$,e("p",null,[o(n,{to:"/api/interfaces/IQueryParamCommonFieldOption.html"},{default:i(()=>[ee]),_:1}),te,o(n,{to:"/api/interfaces/IQueryParamCommonFieldOption.html#formatter"},{default:i(()=>[oe]),_:1})]),ne,e("p",null,[e("a",ie,[ae,o(a)])]),re,de,se,le,e("p",null,[e("a",he,[ce,o(a)])])])}const ue=s(c,[["render",me],["__file","IParamFieldOption.html.vue"]]);export{ue as default};
