"use strict";(self.webpackChunkjin_frame_docs=self.webpackChunkjin_frame_docs||[]).push([[506],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>f});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var p=r.createContext({}),c=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},s=function(e){var n=c(e.components);return r.createElement(p.Provider,{value:n},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=c(t),u=i,f=d["".concat(p,".").concat(u)]||d[u]||m[u]||o;return t?r.createElement(f,a(a({ref:n},s),{},{components:t})):r.createElement(f,a({ref:n},s))}));function f(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=u;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l[d]="string"==typeof e?e:i,a[1]=l;for(var c=2;c<o;c++)a[c]=t[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},9707:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=t(7462),i=(t(7294),t(3905));const o={lang:"en-US",title:"File Upload",description:"File Upload using JinFrame"},a=void 0,l={unversionedId:"more/file-upload",id:"more/file-upload",title:"File Upload",description:"File Upload using JinFrame",source:"@site/docs/more/file-upload.md",sourceDirName:"more",slug:"/more/file-upload",permalink:"/jin-frame/more/file-upload",draft:!1,tags:[],version:"current",frontMatter:{lang:"en-US",title:"File Upload",description:"File Upload using JinFrame"},sidebar:"tutorialSidebar",previous:{title:"Constructor",permalink:"/jin-frame/more/constructor"},next:{title:"Utility Types",permalink:"/jin-frame/more/types"}},p={},c=[{value:"content-type",id:"content-type",level:2},{value:"JinFile",id:"jinfile",level:2}],s={toc:c};function d(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Explain how to upload file using the jin-frame. Every form-data treat body value. Body value automatically convert to form-data using ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/form-data/form-data"},"form-data")," package."),(0,i.kt)("h2",{id:"content-type"},"content-type"),(0,i.kt)("p",null,"Content-type must be set to ",(0,i.kt)("inlineCode",{parentName:"p"},"multipart/form-data")," in order to upload files. See below,"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"class TestGetFrame extends JinEitherFrame {\n  @JinEitherFrame.body()\n  public readonly description: string;\n\n  @JinEitherFrame.body()\n  public readonly myFile: JinFile;\n\n  @JinEitherFrame.body()\n  public readonly myFiles: JinFile[];\n\n  constructor({\n    description,\n    file,\n    files,\n  }: {\n    description: string;\n    file: JinFile;\n    files: JinFile[];\n  }) {\n    super({\n      host: 'http://some.api.google.com',\n      path: '/fileupload-case04',\n      method: 'post',\n      contentType: 'multipart/form-data',\n    });\n\n    this.description = description;\n    this.myFile = file;\n    this.myFiles = files;\n  }\n}\n")),(0,i.kt)("h2",{id:"jinfile"},"JinFile"),(0,i.kt)("p",null,"To forward the file name to the server when uploading the file, use the ",(0,i.kt)("inlineCode",{parentName:"p"},"JinFile")," object to save the file and the file name. See below."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"const frame = new TestGetFrame({\n  description: 'test',\n  file: new JinFile('README.md', fs.readFileSync(path.join(process.cwd(), 'README.md'))),\n  files: [\n    new JinFile('README01.md', fs.readFileSync(path.join(process.cwd(), 'README.md'))),\n    new JinFile('README02.md', fs.readFileSync(path.join(process.cwd(), 'README.md'))),\n    new JinFile('README03.md', fs.readFileSync(path.join(process.cwd(), 'README.md'))),\n    new JinFile('README04.md', fs.readFileSync(path.join(process.cwd(), 'README.md'))),\n  ],\n});\n")),(0,i.kt)("p",null,"file, files field automatically merge and convert to ",(0,i.kt)("inlineCode",{parentName:"p"},"form-data"),"."))}d.isMDXComponent=!0}}]);