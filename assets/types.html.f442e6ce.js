import{_ as n,o as s,c as a,e as t}from"./app.a6de780b.js";const p={},e=t(`<p>Jin-Frame has 2 utility types likes that <code>ConstructorType</code>, <code>OmitConstructorType</code>. If you have created a request in a complex types of Jin-Frame, you have to also create a constructor parameter in a complex type. Utility types reduce overhead of that task.</p><h2 id="constructortype" tabindex="-1"><a class="header-anchor" href="#constructortype" aria-hidden="true">#</a> ConstructorType</h2><p>ConstructorType extract member variable only from Jin-Frame.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">Test001PostFrame</span> <span class="token keyword">extends</span> <span class="token class-name">JinEitherFrame</span> <span class="token punctuation">{</span>
  <span class="token decorator"><span class="token at operator">@</span><span class="token function">JinEitherFrame</span></span><span class="token punctuation">.</span><span class="token function">param</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">public</span> <span class="token keyword">readonly</span> passing<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>

  <span class="token decorator"><span class="token at operator">@</span><span class="token function">JinEitherFrame</span></span><span class="token punctuation">.</span><span class="token function">body</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">public</span> <span class="token keyword">readonly</span> username<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token decorator"><span class="token at operator">@</span><span class="token function">JinEitherFrame</span></span><span class="token punctuation">.</span><span class="token function">body</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">public</span> <span class="token keyword">readonly</span> password<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span>args<span class="token operator">:</span> ConstructorType<span class="token operator">&lt;</span>Test001PostFrame<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      host<span class="token operator">:</span> args<span class="token punctuation">.</span>host<span class="token punctuation">,</span>
      method<span class="token operator">:</span> args<span class="token punctuation">.</span>method<span class="token punctuation">,</span>
      contentType<span class="token operator">:</span> args<span class="token punctuation">.</span>contentType<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">this</span><span class="token punctuation">.</span>passing <span class="token operator">=</span> args<span class="token punctuation">.</span>passing<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>username <span class="token operator">=</span> args<span class="token punctuation">.</span>username<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>password <span class="token operator">=</span> args<span class="token punctuation">.</span>password<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="omitconstructortype" tabindex="-1"><a class="header-anchor" href="#omitconstructortype" aria-hidden="true">#</a> OmitConstructorType</h2><p>OmitConstructorType extract member variable only from Jin-Frame and some variable omit.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">Test001PostFrame</span> <span class="token keyword">extends</span> <span class="token class-name">JinEitherFrame</span> <span class="token punctuation">{</span>
  <span class="token decorator"><span class="token at operator">@</span><span class="token function">JinEitherFrame</span></span><span class="token punctuation">.</span><span class="token function">param</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">public</span> <span class="token keyword">readonly</span> passing<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>

  <span class="token decorator"><span class="token at operator">@</span><span class="token function">JinEitherFrame</span></span><span class="token punctuation">.</span><span class="token function">body</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">public</span> <span class="token keyword">readonly</span> username<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token decorator"><span class="token at operator">@</span><span class="token function">JinEitherFrame</span></span><span class="token punctuation">.</span><span class="token function">body</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">public</span> <span class="token keyword">readonly</span> password<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span>args<span class="token operator">:</span> OmitConstructorType<span class="token operator">&lt;</span>Test001PostFrame<span class="token punctuation">,</span> <span class="token string">&#39;host&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;method&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;contentType&#39;</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      host<span class="token operator">:</span> <span class="token string">&#39;http://some.api.google.com/jinframe/:passing&#39;</span><span class="token punctuation">,</span>
      method<span class="token operator">:</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">this</span><span class="token punctuation">.</span>passing <span class="token operator">=</span> args<span class="token punctuation">.</span>passing<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>username <span class="token operator">=</span> args<span class="token punctuation">.</span>username<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>password <span class="token operator">=</span> args<span class="token punctuation">.</span>password<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="jinconstructortype" tabindex="-1"><a class="header-anchor" href="#jinconstructortype" aria-hidden="true">#</a> JinConstructorType</h2><p>OmitConstructorType extract member variable only from Jin-Frame and some variable omit.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">Test001PostFrame</span> <span class="token keyword">extends</span> <span class="token class-name">JinEitherFrame</span> <span class="token punctuation">{</span>
  <span class="token decorator"><span class="token at operator">@</span><span class="token function">JinEitherFrame</span></span><span class="token punctuation">.</span><span class="token function">param</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">public</span> <span class="token keyword">readonly</span> passing<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>

  <span class="token decorator"><span class="token at operator">@</span><span class="token function">JinEitherFrame</span></span><span class="token punctuation">.</span><span class="token function">body</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">public</span> <span class="token keyword">readonly</span> username<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token decorator"><span class="token at operator">@</span><span class="token function">JinEitherFrame</span></span><span class="token punctuation">.</span><span class="token function">body</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">public</span> <span class="token keyword">readonly</span> password<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>

  <span class="token comment">// JinConstructorType omit &#39;host&#39;, &#39;path&#39;, &#39;method&#39;, &#39;contentType&#39;</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>args<span class="token operator">:</span> JinConstructorType<span class="token operator">&lt;</span>Test001PostFrame<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      host<span class="token operator">:</span> <span class="token string">&#39;http://some.api.google.com/jinframe/:passing&#39;</span><span class="token punctuation">,</span>
      method<span class="token operator">:</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">this</span><span class="token punctuation">.</span>passing <span class="token operator">=</span> args<span class="token punctuation">.</span>passing<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>username <span class="token operator">=</span> args<span class="token punctuation">.</span>username<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>password <span class="token operator">=</span> args<span class="token punctuation">.</span>password<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="jinomitconstructortype" tabindex="-1"><a class="header-anchor" href="#jinomitconstructortype" aria-hidden="true">#</a> JinOmitConstructorType</h2><p>OmitConstructorType extract member variable only from Jin-Frame and some variable omit.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">Test001PostFrame</span> <span class="token keyword">extends</span> <span class="token class-name">JinEitherFrame</span> <span class="token punctuation">{</span>
  <span class="token decorator"><span class="token at operator">@</span><span class="token function">JinEitherFrame</span></span><span class="token punctuation">.</span><span class="token function">param</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">public</span> <span class="token keyword">readonly</span> passing<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>

  <span class="token decorator"><span class="token at operator">@</span><span class="token function">JinEitherFrame</span></span><span class="token punctuation">.</span><span class="token function">body</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">public</span> <span class="token keyword">readonly</span> username<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token decorator"><span class="token at operator">@</span><span class="token function">JinEitherFrame</span></span><span class="token punctuation">.</span><span class="token function">body</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">public</span> <span class="token keyword">readonly</span> password<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>

  <span class="token comment">// JinConstructorType omit &#39;host&#39;, &#39;path&#39;, &#39;method&#39;, &#39;contentType&#39;</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>args<span class="token operator">:</span> JinOmitConstructorType<span class="token operator">&lt;</span>Test001PostFrame<span class="token punctuation">,</span> <span class="token string">&#39;usename&#39;</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      host<span class="token operator">:</span> <span class="token string">&#39;http://some.api.google.com/jinframe/:passing&#39;</span><span class="token punctuation">,</span>
      method<span class="token operator">:</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">this</span><span class="token punctuation">.</span>passing <span class="token operator">=</span> args<span class="token punctuation">.</span>passing<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>username <span class="token operator">=</span> <span class="token string">&#39;ironman&#39;</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>password <span class="token operator">=</span> args<span class="token punctuation">.</span>password<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13),o=[e];function c(i,l){return s(),a("div",null,o)}const u=n(p,[["render",c],["__file","types.html.vue"]]);export{u as default};
