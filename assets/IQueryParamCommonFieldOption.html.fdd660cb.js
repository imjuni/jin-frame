import{_ as l,r as d,o as s,c,a as e,b as o,w as a,d as t,e as i}from"./app.a6de780b.js";const h={},m=e("h1",{id:"interface-iqueryparamcommonfieldoption",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#interface-iqueryparamcommonfieldoption","aria-hidden":"true"},"#"),t(" Interface: IQueryParamCommonFieldOption")],-1),f=e("h2",{id:"hierarchy",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#hierarchy","aria-hidden":"true"},"#"),t(" Hierarchy")],-1),u=e("code",null,"ICommonFieldOption",-1),p=e("p",null,[t("\u21B3 "),e("strong",null,[e("code",null,"IQueryParamCommonFieldOption")])],-1),_=e("code",null,"IParamFieldOption",-1),b=e("code",null,"IQueryFieldOption",-1),y=e("h2",{id:"table-of-contents",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#table-of-contents","aria-hidden":"true"},"#"),t(" Table of contents")],-1),I=e("h3",{id:"properties",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#properties","aria-hidden":"true"},"#"),t(" Properties")],-1),x=i('<h2 id="properties-1" tabindex="-1"><a class="header-anchor" href="#properties-1" aria-hidden="true">#</a> Properties</h2><h3 id="bit" tabindex="-1"><a class="header-anchor" href="#bit" aria-hidden="true">#</a> bit</h3><p>\u2022 <strong>bit</strong>: <code>Object</code></p><h4 id="type-declaration" tabindex="-1"><a class="header-anchor" href="#type-declaration" aria-hidden="true">#</a> Type declaration</h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>enable</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">enable bitwised operator using by array</td></tr><tr><td style="text-align:left;"><code>withZero</code></td><td style="text-align:left;"><code>boolean</code></td><td style="text-align:left;">If this configuration set enable, bitwised operation result are zero after submit zero value</td></tr></tbody></table><h4 id="defined-in" tabindex="-1"><a class="header-anchor" href="#defined-in" aria-hidden="true">#</a> Defined in</h4>',6),g={href:"https://github.com/imjuni/jin-frame/blob/8e8e7e5/src/interfaces/IQueryParamCommonFieldOption.ts#L15",target:"_blank",rel:"noopener noreferrer"},O=i('<hr><h3 id="comma" tabindex="-1"><a class="header-anchor" href="#comma" aria-hidden="true">#</a> comma</h3><p>\u2022 <strong>comma</strong>: <code>boolean</code></p><p>&quot;comma&quot; option only working querystring. If you want to process array parameter of querystring using by comma seperated string, set this option</p><p>Comma seperated array parameter on querystring</p><h4 id="defined-in-1" tabindex="-1"><a class="header-anchor" href="#defined-in-1" aria-hidden="true">#</a> Defined in</h4>',6),F={href:"https://github.com/imjuni/jin-frame/blob/8e8e7e5/src/interfaces/IQueryParamCommonFieldOption.ts#L13",target:"_blank",rel:"noopener noreferrer"},C=i('<hr><h3 id="encode" tabindex="-1"><a class="header-anchor" href="#encode" aria-hidden="true">#</a> encode</h3><p>\u2022 <code>Optional</code> <strong>encode</strong>: <code>boolean</code></p><p>Do encodeURIComponent execution, this option only executed in query parameter</p><h4 id="inherited-from" tabindex="-1"><a class="header-anchor" href="#inherited-from" aria-hidden="true">#</a> Inherited from</h4>',5),P=e("h4",{id:"defined-in-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-2","aria-hidden":"true"},"#"),t(" Defined in")],-1),Q={href:"https://github.com/imjuni/jin-frame/blob/8e8e7e5/src/interfaces/ICommonFieldOption.ts#L3",target:"_blank",rel:"noopener noreferrer"},k=e("hr",null,null,-1),j=e("h3",{id:"formatter",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#formatter","aria-hidden":"true"},"#"),t(" formatter")],-1),q=e("code",null,"Optional",-1),L=e("strong",null,"formatter",-1),w=e("code",null,"IFormatter",-1),D=e("h4",{id:"defined-in-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#defined-in-3","aria-hidden":"true"},"#"),t(" Defined in")],-1),N={href:"https://github.com/imjuni/jin-frame/blob/8e8e7e5/src/interfaces/IQueryParamCommonFieldOption.ts#L5",target:"_blank",rel:"noopener noreferrer"};function v(E,T){const n=d("RouterLink"),r=d("ExternalLinkIcon");return s(),c("div",null,[e("p",null,[o(n,{to:"/"},{default:a(()=>[t("jin-frame")]),_:1}),t(" / "),o(n,{to:"/modules.html"},{default:a(()=>[t("Exports")]),_:1}),t(" / IQueryParamCommonFieldOption")]),m,f,e("ul",null,[e("li",null,[e("p",null,[o(n,{to:"/interfaces/ICommonFieldOption.html"},{default:a(()=>[u]),_:1})]),p,e("p",null,[t("\u21B3\u21B3 "),o(n,{to:"/interfaces/IParamFieldOption.html"},{default:a(()=>[_]),_:1})]),e("p",null,[t("\u21B3\u21B3 "),o(n,{to:"/interfaces/IQueryFieldOption.html"},{default:a(()=>[b]),_:1})])])]),y,I,e("ul",null,[e("li",null,[o(n,{to:"/interfaces/IQueryParamCommonFieldOption.html#bit"},{default:a(()=>[t("bit")]),_:1})]),e("li",null,[o(n,{to:"/interfaces/IQueryParamCommonFieldOption.html#comma"},{default:a(()=>[t("comma")]),_:1})]),e("li",null,[o(n,{to:"/interfaces/IQueryParamCommonFieldOption.html#encode"},{default:a(()=>[t("encode")]),_:1})]),e("li",null,[o(n,{to:"/interfaces/IQueryParamCommonFieldOption.html#formatter"},{default:a(()=>[t("formatter")]),_:1})])]),x,e("p",null,[e("a",g,[t("src/interfaces/IQueryParamCommonFieldOption.ts:15"),o(r)])]),O,e("p",null,[e("a",F,[t("src/interfaces/IQueryParamCommonFieldOption.ts:13"),o(r)])]),C,e("p",null,[o(n,{to:"/interfaces/ICommonFieldOption.html"},{default:a(()=>[t("ICommonFieldOption")]),_:1}),t("."),o(n,{to:"/interfaces/ICommonFieldOption.html#encode"},{default:a(()=>[t("encode")]),_:1})]),P,e("p",null,[e("a",Q,[t("src/interfaces/ICommonFieldOption.ts:3"),o(r)])]),k,j,e("p",null,[t("\u2022 "),q,t(),L,t(": "),o(n,{to:"/interfaces/IFormatter.html"},{default:a(()=>[w]),_:1})]),D,e("p",null,[e("a",N,[t("src/interfaces/IQueryParamCommonFieldOption.ts:5"),o(r)])])])}const B=l(h,[["render",v],["__file","IQueryParamCommonFieldOption.html.vue"]]);export{B as default};
